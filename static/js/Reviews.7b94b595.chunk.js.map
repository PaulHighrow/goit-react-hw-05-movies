{"version":3,"file":"static/js/Reviews.7b94b595.chunk.js","mappings":"8TAEaA,EAAaC,EAAAA,GAAAA,GAAH,8HAOVC,EAASD,EAAAA,GAAAA,GAAH,mHAMNE,EAASF,EAAAA,GAAAA,IAAH,0FAMNG,EAASH,EAAAA,GAAAA,IAAH,+HASNI,EAAQJ,EAAAA,GAAAA,IAAH,kFAMLK,EAAOL,EAAAA,GAAAA,GAAH,4CAIJM,EAAaN,EAAAA,GAAAA,KAAH,+DAKVO,EAAOP,EAAAA,GAAAA,KAAH,4C,mBC+CjB,EA1EgB,WACd,OAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAY,mCAAG,8GAEUC,EAAAA,EAAAA,IAAgBJ,GAF1B,OAEXK,EAFW,OAGjBR,EAAWQ,GAHM,gDAKjBC,QAAQC,MAAR,MACAC,EAAAA,GAAAA,MAAA,uBAA4B,KAAMC,QAAlC,wBANiB,yBAQjBV,GAAa,GARI,4EAAH,qDAYlBI,GACD,GAAE,CAACH,KAGF,iCACE,SAAC,IAAD,CAASU,GAAG,KAAZ,qBACCZ,GACC,SAACa,EAAA,EAAD,IACIf,EAAQgB,QACZ,SAAC1B,EAAD,UACGU,EAAQiB,KACP,YAMO,IALLb,EAKI,EALJA,GACAc,EAII,EAJJA,OACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,WACkBC,EACd,EADJC,eAAkBD,YAOlB,OALKA,IACHA,EACE,sEAIF,UAAC7B,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,CACE6B,IACEF,EAAYG,SAAS,SACjBH,EAAYI,MAAM,GAClBC,EAAAA,EAAeL,EAErBM,IAAG,UAAKT,EAAL,gBAEL,UAACvB,EAAD,YACE,SAACC,EAAD,UAAOsB,KACP,SAACrB,EAAD,UACG,IAAI+B,KAAKR,GAAYS,0BAI5B,SAAC/B,EAAD,UAAOqB,MAjBIf,EAoBhB,OAIL,mDAEF,SAAC,KAAD,MAGL,C,mMCxFD0B,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAU,mCACVC,EAAiB,mCAAG,oGACZF,EAAAA,EAAAA,IAAA,uBAAkC,CACnDG,OAAQ,CACNC,QAASH,EACTI,KAAM,KAJqB,cACzBC,EADyB,yBAOxBA,EAAKC,KAAKC,SAPc,2CAAH,qDAUjBC,EAAgB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAAA,IAAA,8CACsBU,EADtB,+BAEjB,CACEP,OAAQ,CACNC,QAASH,EACTI,KAAM,KANkB,cACxBC,EADwB,yBAUvBA,EAAKC,KAAKC,SAVa,2CAAH,sDAahBG,EAAe,mCAAG,WAAMrC,GAAN,uFACV0B,EAAAA,EAAAA,IAAA,gBAAmB1B,EAAnB,oBAAyC,CAC1D6B,OAAQ,CACNC,QAASH,KAHgB,cACvBK,EADuB,yBAMtBA,EAAKC,MANiB,2CAAH,sDASfK,EAAY,mCAAG,WAAMtC,GAAN,uFACP0B,EAAAA,EAAAA,IAAA,gBAAmB1B,EAAnB,4BAAiD,CAClE6B,OAAQ,CACNC,QAASH,KAHa,cACpBK,EADoB,yBAMnBA,EAAKC,KAAKM,MANS,2CAAH,sDASZnC,EAAe,mCAAG,WAAMJ,GAAN,uFACV0B,EAAAA,EAAAA,IAAA,gBAAmB1B,EAAnB,4BAAiD,CAClE6B,OAAQ,CACNC,QAASH,KAHgB,cACvBK,EADuB,yBAMtBA,EAAKC,KAAKC,SANY,2CAAH,qD,uDC9CrB,IAAMZ,EAAe,iC","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/apiService.js","services/constants.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  display: grid;\n  gap: 25px;\n  grid-template-columns: repeat(2, 1fr);\n  justify-content: center;\n`;\n\nexport const Review = styled.li`\n  border: 1px solid #727272;\n  padding: 20px;\n  max-height: 300px;\n  overflow-y: auto;\n`;\nexport const Author = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 50%;\n  width: 64px;\n  height: 64px;\n  object-fit: cover;\n\n  margin-right: 15px;\n`;\n\nexport const About = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Name = styled.h3`\n  font-size: 18px;\n`;\n\nexport const ReviewDate = styled.span`\n  font-size: 12px;\n  color: #727272;\n`;\n\nexport const Text = styled.span`\n  font-size: 14px;\n`;\n","import { Heading } from 'components/App.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/apiService';\nimport { BASE_IMG_URL } from 'services/constants';\nimport {\n  ReviewList,\n  Review,\n  Author,\n  About,\n  Avatar,\n  Name,\n  ReviewDate,\n  Text,\n} from './Reviews.styled';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchReviews = async () => {\n      try {\n        const movieReviews = await getMovieReviews(id);\n        setReviews(movieReviews);\n      } catch (error) {\n        console.error(error);\n        toast.error(`Oh boy, it's ${error.message}! Please try again!`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <>\n      <Heading as=\"h2\">Reviews</Heading>\n      {isLoading ? (\n        <Loader />\n      ) : !!reviews.length ? (\n        <ReviewList>\n          {reviews.map(\n            ({\n              id,\n              author,\n              content,\n              created_at,\n              author_details: { avatar_path },\n            }) => {\n              if (!avatar_path) {\n                avatar_path =\n                  '/https://msf-theeltal.de/wp-content/uploads/2018/04/no-avatar.jpg';\n              }\n\n              return (\n                <Review key={id}>\n                  <Author>\n                    <Avatar\n                      src={\n                        avatar_path.includes('https')\n                          ? avatar_path.slice(1)\n                          : BASE_IMG_URL + avatar_path\n                      }\n                      alt={`${author}'s avatar`}\n                    />\n                    <About>\n                      <Name>{author}</Name>\n                      <ReviewDate>\n                        {new Date(created_at).toLocaleString()}\n                      </ReviewDate>\n                    </About>\n                  </Author>\n                  <Text>{content}</Text>\n                </Review>\n              );\n            }\n          )}\n        </ReviewList>\n      ) : (\n        <p>Sorry, no reviews yet!</p>\n      )}\n      <Toaster />\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = 'e146a7a5146c0f8a3c3cd99167c5b659';\nexport const getTrendingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(`movie/${id}?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\n\nexport const getMovieCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["ReviewList","styled","Review","Author","Avatar","About","Name","ReviewDate","Text","useState","reviews","setReviews","isLoading","setIsLoading","id","useParams","useEffect","fetchReviews","getMovieReviews","movieReviews","console","error","toast","message","as","Loader","length","map","author","content","created_at","avatar_path","author_details","src","includes","slice","BASE_IMG_URL","alt","Date","toLocaleString","axios","API_KEY","getTrendingMovies","params","api_key","page","resp","data","results","getMoviesByQuery","query","getMovieDetails","getMovieCast","cast"],"sourceRoot":""}