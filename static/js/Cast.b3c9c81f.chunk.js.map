{"version":3,"file":"static/js/Cast.b3c9c81f.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/apiService.js","services/constants.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 10px;\n`;\n\nexport const CastPic = styled.img`\n  width: 100%;\n`;\n\nexport const CastName = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.2;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CastCharacter = styled.span`\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1.2;\n`;\n","import { Heading } from 'components/App.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/apiService';\nimport { BASE_IMG_URL } from 'services/constants';\nimport { CastList, CastPic, CastName, CastCharacter } from './Cast.styled';\nimport placeholder from '../../img/placeholder.jpg';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchCast = async () => {\n      try {\n        const movieCast = await getMovieCast(id);\n        setCast(movieCast);\n      } catch (error) {\n        console.error(error);\n        toast.error(`Oh boy, it's ${error.message}! Please try again!`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [id]);\n\n  return (\n    <>\n      <Heading as=\"h2\">Cast</Heading>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <CastList>\n          {cast.map(({ order, profile_path, name, character }) => (\n            <li key={order}>\n              <CastPic\n                src={profile_path ? BASE_IMG_URL + profile_path : placeholder}\n                alt={name}\n              />\n              <CastName>\n                {name}\n                {character && <CastCharacter>as {character}</CastCharacter>}\n              </CastName>\n            </li>\n          ))}\n        </CastList>\n      )}\n      <Toaster />\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = 'e146a7a5146c0f8a3c3cd99167c5b659';\nexport const getTrendingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(`movie/${id}?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\n\nexport const getMovieCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n\nlet numbers = 90000000;\n\nconsole.log(numbers.toString());\nconsole.log(numbers.toString().split(''));\nconsole.log(\n  numbers\n    .toString()\n    .split('')\n    .map((symbol, i, a) => {\n      console.log(symbol);\n      console.log(symbol[i]);\n      console.log(a.length - 1);\n      return !(i + (1 % 3)) ? symbol + ',' : symbol;\n    })\n);\nconsole.log(\n  numbers\n    .toString()\n    .split('')\n    .map((symbol, i, a) =>\n      !((a.length - (i + 1)) % 3) && i + 1 !== a.length ? symbol + ',' : symbol\n    )\n    .join('')\n);\n"],"names":["CastList","styled","CastPic","CastName","CastCharacter","useState","cast","setCast","isLoading","setIsLoading","id","useParams","useEffect","fetchCast","getMovieCast","movieCast","console","error","toast","message","as","Loader","map","order","profile_path","name","character","src","BASE_IMG_URL","placeholder","alt","axios","API_KEY","getTrendingMovies","params","api_key","page","resp","data","results","getMoviesByQuery","query","getMovieDetails","getMovieReviews","numbers","log","toString","split","symbol","i","a","length","join"],"sourceRoot":""}