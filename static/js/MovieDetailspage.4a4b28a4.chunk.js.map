{"version":3,"file":"static/js/MovieDetailspage.4a4b28a4.chunk.js","mappings":"gMAEaA,E,QAAUC,GAAAA,IAAH,sE,SCCPC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,OAAO,IACPC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,gBACVC,MAAO,CAAEC,QAAS,YAIzB,C,kKCwDD,UAlEqB,WACnB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAsBjB,IAhBAC,EAAAA,EAAAA,YAAU,WACRP,GAAa,GACb,IAAMQ,EAAY,mCAAG,8GAEUC,EAAAA,EAAAA,IAAgBR,GAF1B,OAEXS,EAFW,OAGjBZ,EAAWY,GAHM,gDAKjBC,QAAQC,MAAR,MACAC,EAAAA,GAAAA,MAAA,uBAA4B,KAAMC,QAAlC,wBANiB,yBAQjBd,GAAa,GARI,4EAAH,qDAWlBQ,GACD,GAAE,CAACP,KAECJ,EACH,OAAO,KAGT,IAAQkB,EAA2DlB,EAA3DkB,MAAOC,EAAoDnB,EAApDmB,YAAaC,EAAuCpB,EAAvCoB,SAAUC,EAA6BrB,EAA7BqB,aAAcC,EAAetB,EAAfsB,WAEpD,OACE,gCACGpB,GACC,SAAC,IAAD,KAEA,4BACE,SAAC,IAAD,UAAUgB,KACV,mBAAQK,KAAK,SAASC,QAjCT,WACnBhB,EAASF,EAASmB,MAAMC,KACzB,EA+BO,sBAIA,gBAAKC,IAAKC,EAAAA,EAAeT,EAAaU,IAAKX,KAG3C,sCAAcE,MACd,oCACWC,EADX,aACmCC,EADnC,aAIA,SAAC,KAAD,CAAYQ,GAAG,OAAOL,MAAO,CAAEC,KAAMpB,EAASmB,MAAMC,MAApD,mBAGA,SAAC,KAAD,CAAYI,GAAG,UAAUL,MAAO,CAAEC,KAAMpB,EAASmB,MAAMC,MAAvD,yBAKJ,SAAC,KAAD,KACA,SAAC,KAAD,MAGL,C,mMCvEDK,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAU,mCACVC,EAAiB,mCAAG,oGACZF,EAAAA,EAAAA,IAAA,uBAAkC,CACnDG,OAAQ,CACNC,QAASH,EACTI,KAAM,KAJqB,cACzBC,EADyB,yBAOxBA,EAAKC,KAAKC,SAPc,2CAAH,qDAUjBC,EAAgB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAAA,IAAA,8CACsBU,EADtB,+BAEjB,CACEP,OAAQ,CACNC,QAASH,EACTI,KAAM,KANkB,cACxBC,EADwB,yBAUvBA,EAAKC,KAAKC,SAVa,2CAAH,sDAahB3B,EAAe,mCAAG,WAAMR,GAAN,uFACV2B,EAAAA,EAAAA,IAAA,gBAAmB3B,EAAnB,oBAAyC,CAC1D8B,OAAQ,CACNC,QAASH,KAHgB,cACvBK,EADuB,yBAMtBA,EAAKC,MANiB,2CAAH,sDASfI,EAAY,mCAAG,WAAMtC,GAAN,uFACP2B,EAAAA,EAAAA,IAAA,gBAAmB3B,EAAnB,4BAAiD,CAClE8B,OAAQ,CACNC,QAASH,KAHa,cACpBK,EADoB,yBAMnBA,EAAKC,KAAKK,MANS,2CAAH,sDASZC,EAAe,mCAAG,WAAMxC,GAAN,uFACV2B,EAAAA,EAAAA,IAAA,gBAAmB3B,EAAnB,4BAAiD,CAClE8B,OAAQ,CACNC,QAASH,KAHgB,cACvBK,EADuB,yBAMtBA,EAAKC,KAAKC,SANY,2CAAH,qD,uDC9CrB,IAAMX,EAAe,iC","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.jsx","services/apiService.js","services/constants.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { Rings } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Wrapper>\n      <Rings\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        radius=\"6\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"rings-loading\"\n        style={{ display: 'block' }}\n      />\n    </Wrapper>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from 'services/apiService';\nimport { BASE_IMG_URL } from 'services/constants';\nimport { Heading } from 'components/App.styled';\nimport { StyledLink } from 'components/MoviesList/MoviesList.styled';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchDetails = async () => {\n      try {\n        const movieDetails = await getMovieDetails(id);\n        setDetails(movieDetails);\n      } catch (error) {\n        console.error(error);\n        toast.error(`Oh boy, it's ${error.message}! Please try again!`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDetails();\n  }, [id]);\n\n  if (!details) {\n    return null;\n  }\n\n  const { title, poster_path, overview, vote_average, vote_count } = details;\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div>\n          <Heading>{title}</Heading>\n          <button type=\"button\" onClick={handleGoBack}>\n            Go back\n          </button>\n\n          <img src={BASE_IMG_URL + poster_path} alt={title} />\n          {/* <img src={BACK_IMG_URL + backdrop_path} alt={title} /> */}\n\n          <p>Overview: {overview}</p>\n          <p>\n            Rating: {vote_average} based on {vote_count} votes\n          </p>\n\n          <StyledLink to=\"cast\" state={{ from: location.state.from }}>\n            Cast\n          </StyledLink>\n          <StyledLink to=\"reviews\" state={{ from: location.state.from }}>\n            Reviews\n          </StyledLink>\n        </div>\n      )}\n      <Outlet />\n      <Toaster />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = 'e146a7a5146c0f8a3c3cd99167c5b659';\nexport const getTrendingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const resp = await axios.get(`movie/${id}?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\n\nexport const getMovieCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\nexport const BACK_IMG_URL = 'https://image.tmdb.org/t/p/w1280';\n"],"names":["Wrapper","styled","Loader","height","width","color","radius","wrapperStyle","wrapperClass","visible","ariaLabel","style","display","useState","details","setDetails","isLoading","setIsLoading","id","useParams","location","useLocation","navigate","useNavigate","useEffect","fetchDetails","getMovieDetails","movieDetails","console","error","toast","message","title","poster_path","overview","vote_average","vote_count","type","onClick","state","from","src","BASE_IMG_URL","alt","to","axios","API_KEY","getTrendingMovies","params","api_key","page","resp","data","results","getMoviesByQuery","query","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}